# library/stack.radian: utilities for working with stacks
#
# Copyright 2012 Mars Saxman
#
# This software is provided 'as-is', without any express or implied warranty.
# In no event will the authors be held liable for any damages arising from the
# use of this software.
#
# Permission is granted to anyone to use this software for any purpose,
# including commercial applications, and to alter it and redistribute it freely,
# subject to the following restrictions:
#
# 1. The origin of this software must not be misrepresented; you must not claim
# that you wrote the original software. If you use this software in a product,
# an acknowledgment in the product documentation would be appreciated but is
# not required.
#
# 2. Altered source versions must be plainly marked as such, and must not be
# misrepresented as being the original software.
#
# 3. This notice may not be removed or altered from any source distribution.

function type(obj):
	# methods which define the "stack" interface
	result = obj has :push
	result = result and obj has :head
	result = result and obj has :pop
	result = result and obj has :is_empty
end type

object blank:
	def is_empty = true
	def size = 0
	var pop = throw(:undefined)
	object _element(value, previous):
		var head = value
		var pop = previous
		def is_empty = false
		def size = previous.size + 1
		method push(value):
			self->pop = self
			self->head = value
		end push
	end _element
	function push(value) = self._element(value, self)
end blank
