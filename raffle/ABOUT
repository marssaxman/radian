RAFFLE is the Radian Foundation Language, a minimal semantic definition and
interchange format notation designed to serve as the implementation medium for
a family of higher-level languages.

Raffle offers basic functional operations, structural macros, primitive buffer
and integer types, and arithmetic operators based on common CPU intrinsics.
The syntax elements are based on languages like JavaScript and Perl, but they
are designed to allow for the construction of derived languages which look more
like Python, Ruby, or Lua.There are no reserved words, built-in functions, or
intrinsic type names, and the operators are designed to be overloaded. The
execution environment is left entirely unspecified.

RFL is the Raffle interpreter, bin/rfl, which reads source code from stdin and
evaluates it. If stdin is a tty, rfl will evaluate the program after every
sequence point and print the result if it reduced to a concrete value. In batch
mode, rfl will wait until stdin reaches EOF, then print the result; if it is
an abstract function, the result will be Raffle code representing the function
as it exists after macro processing.

RLF (pronounced "Ralph") is the Raffle Lexical Frontend, a tool for building
higher-level derived languages. Specify a prolog, an epilog, and a list of
source files; RLF will evaluate the prolog and save its result, then evaluate
each source file using the prolog result as its input. Each source file's
result will be added to a tuple. Once finished, RLF will evaluate the epilog,
passing in the tuple of source file results; the epilog's result, in turn,
will be printed to stdout where it can be piped into RFL or some other tool.

